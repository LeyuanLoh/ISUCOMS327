
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3408
#define DUMP_HARDNESS_IMAGES 15,245
#define MAX(17,277
#define MIN(18,315
#define rand_under(22,467
#define rand_range(26,609
#define UNUSED(27,681
#define malloc(29,710
typedef struct corridor_path35,854
  heap_node_t *hn;hn37,885
  uint8_t pos[pos38,904
  uint8_t from[from39,922
  int32_t cost;40,941
} corridor_path_t;41,957
typedef struct distance_path43,977
  heap_node_t *hn;hn45,1008
  uint8_t pos[pos46,1027
  int32_t cost;47,1045
} distance_path_t;48,1061
typedef enum dim50,1081
  dim_x,52,1100
  dim_y,53,1109
  num_dims54,1118
} dim_t;55,1129
typedef int8_t pair_t[pair_t57,1139
#define DUNGEON_X 59,1173
#define DUNGEON_Y 60,1194
#define MIN_ROOMS 61,1215
#define MAX_ROOMS 62,1235
#define ROOM_MIN_X 63,1256
#define ROOM_MIN_Y 64,1277
#define ROOM_MAX_X 65,1298
#define ROOM_MAX_Y 66,1320
#define SAVE_DIR 67,1342
#define DUNGEON_SAVE_FILE 68,1369
#define DUNGEON_SAVE_SEMANTIC 69,1405
#define DUNGEON_SAVE_VERSION 70,1450
#define mappair(72,1483
#define mapxy(73,1540
#define hardnesspair(74,1575
#define hardnessxy(75,1642
typedef enum __attribute__((__packed__)) terrain_type77,1688
  ter_debug,79,1744
  ter_wall,80,1757
  ter_wall_immutable,81,1769
  ter_floor,82,1791
  ter_floor_room,83,1804
  ter_floor_hall,84,1822
  ter_stairs,85,1840
  ter_stairs_up,86,1854
  ter_stairs_down87,1871
} terrain_type_t;88,1889
typedef struct room90,1908
  pair_t position;92,1930
  pair_t size;93,1949
} room_t;94,1964
typedef struct dungeon96,1975
  uint16_t num_rooms;98,2000
  room_t *rooms;rooms99,2022
  terrain_type_t map[map100,2039
  uint8_t hardness[hardness109,2692
  pair_t pc;110,2734
  uint8_t tunnel_distance_map[tunnel_distance_map111,2747
  uint8_t nontunnel_distance_map[nontunnel_distance_map112,2800
} dungeon_t;113,2856
static uint32_t in_room(115,2870
static uint32_t adjacent_to_room(133,3267
static uint32_t is_open_space(141,3528
static int32_t corridor_path_cmp(146,3627
static int32_t distance_path_cmp(151,3775
static void dijkstra_corridor(156,3923
static void dijkstra_corridor_inv(277,7840
#define hardnesspair_inv(344,9222
static int connect_two_rooms(400,11946
static int create_cycle(419,12598
static int connect_rooms(464,14173
int gaussian[gaussian478,14368
typedef struct queue_node485,14507
  int x,487,14535
  int x, y;487,14535
  struct queue_node *next;next488,14547
} queue_node_t;489,14574
static int smooth_hardness(491,14591
static int empty_dungeon(674,18958
static int place_rooms(696,19346
static void place_stairs(740,20550
static int make_rooms(764,21151
int gen_dungeon(790,21721
void render_dungeon(804,21885
void delete_dungeon(850,22843
void init_dungeon(855,22900
int write_dungeon_map(860,22957
int write_rooms(875,23191
uint16_t count_up_stairs(898,23665
uint16_t count_down_stairs(917,23928
int write_stairs(936,24195
uint32_t calculate_dungeon_size(974,24974
int makedirectory(985,25444
int write_dungeon(1026,26100
int read_dungeon_map(1098,27619
int read_stairs(1127,28251
int read_rooms(1152,28732
int read_dungeon(1214,30492
int read_pgm(1306,32349
void usage(1408,34813
void generate_distance_map_tunnel(1418,35023
void generate_distance_map_non_tunnel(1562,39459
void init_nontunnel_distance_map(1706,43899
void print_nontunnel_distance_map(1719,44105
void print_tunnel_distance_map(1745,44635
int main(1771,45097
