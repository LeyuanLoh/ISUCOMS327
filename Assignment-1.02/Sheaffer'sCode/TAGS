
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2185
#define rand_under(16,339
#define rand_range(20,481
#define UNUSED(21,553
#define malloc(23,582
typedef struct corridor_path29,726
  heap_node_t *hn;hn31,757
  uint8_t pos[pos32,776
  uint8_t from[from33,794
  int32_t cost;34,813
} corridor_path_t;35,829
typedef enum dim37,849
  dim_x,39,868
  dim_y,40,877
  num_dims41,886
} dim_t;42,897
typedef int16_t pair_t[pair_t44,907
#define DUNGEON_X 46,942
#define DUNGEON_Y 47,963
#define MIN_ROOMS 48,984
#define MAX_ROOMS 49,1004
#define ROOM_MIN_X 50,1025
#define ROOM_MIN_Y 51,1046
#define ROOM_MAX_X 52,1067
#define ROOM_MAX_Y 53,1089
#define mappair(55,1112
#define mapxy(56,1169
#define hardnesspair(57,1204
#define hardnessxy(58,1271
typedef enum __attribute__((__packed__)) terrain_type60,1317
  ter_debug,62,1373
  ter_wall,63,1386
  ter_wall_immutable,64,1398
  ter_floor,65,1420
  ter_floor_room,66,1433
  ter_floor_hall,67,1451
  ter_stairs,68,1469
  ter_stairs_up,69,1483
  ter_stairs_down70,1500
} terrain_type_t;71,1518
typedef struct room73,1537
  pair_t position;75,1559
  pair_t size;76,1578
} room_t;77,1593
typedef struct dungeon79,1604
  uint32_t num_rooms;81,1629
  room_t rooms[rooms82,1651
  terrain_type_t map[map83,1678
  uint8_t hardness[hardness92,2331
} dungeon_t;93,2373
static uint32_t in_room(95,2387
static uint32_t adjacent_to_room(113,2784
static uint32_t is_open_space(121,3045
static int32_t corridor_path_cmp(126,3144
static void dijkstra_corridor(131,3292
static void dijkstra_corridor_inv(252,7209
#define hardnesspair_inv(319,8591
static int connect_two_rooms(375,11315
static int create_cycle(394,11967
static int connect_rooms(439,13542
int gaussian[gaussian453,13737
typedef struct queue_node460,13876
  int x,462,13904
  int x, y;462,13904
  struct queue_node *next;next463,13916
} queue_node_t;464,13943
static int smooth_hardness(466,13960
static int empty_dungeon(643,18231
static int place_rooms(665,18619
static void place_stairs(709,19823
static int make_rooms(733,20424
int gen_dungeon(760,20981
void render_dungeon(774,21145
void delete_dungeon(813,21922
void init_dungeon(817,21961
int main(822,22018
